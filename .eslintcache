[{"/Users/Nada/Desktop/Software Project/Website/project/src/index.js":"1","/Users/Nada/Desktop/Software Project/Website/project/src/reportWebVitals.js":"2","/Users/Nada/Desktop/Software Project/Website/project/src/App.js":"3","/Users/Nada/Desktop/Software Project/Website/project/src/Components/Navbar.js":"4","/Users/Nada/Desktop/Software Project/Website/project/src/Components/Home.js":"5","/Users/Nada/Desktop/Software Project/Website/project/src/Components/Packages.js":"6","/Users/Nada/Desktop/Software Project/Website/project/src/Components/FreePackage.js":"7","/Users/Nada/Desktop/Software Project/Website/project/src/Components/PackageY.js":"8","/Users/Nada/Desktop/Software Project/Website/project/src/Components/PackageX.js":"9","/Users/Nada/Desktop/Software Project/Website/project/src/Components/SignUp.js":"10","/Users/Nada/Desktop/Software Project/Website/project/src/Components/Login.js":"11","/Users/Nada/Desktop/Software Project/Website/project/src/Components/Footer.js":"12"},{"size":500,"mtime":1610459338000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610459338000,"results":"15","hashOfConfig":"14"},{"size":1079,"mtime":1611481834000,"results":"16","hashOfConfig":"14"},{"size":562,"mtime":1611226325000,"results":"17","hashOfConfig":"14"},{"size":645,"mtime":1611571633000,"results":"18","hashOfConfig":"14"},{"size":1195,"mtime":1611479895000,"results":"19","hashOfConfig":"14"},{"size":5783,"mtime":1611571612000,"results":"20","hashOfConfig":"14"},{"size":6295,"mtime":1611572870000,"results":"21","hashOfConfig":"14"},{"size":6594,"mtime":1611572870000,"results":"22","hashOfConfig":"14"},{"size":1227,"mtime":1611479914000,"results":"23","hashOfConfig":"14"},{"size":741,"mtime":1611479910000,"results":"24","hashOfConfig":"14"},{"size":1229,"mtime":1611481782000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1bzr4ti",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/Nada/Desktop/Software Project/Website/project/src/index.js",[],["56","57"],"/Users/Nada/Desktop/Software Project/Website/project/src/reportWebVitals.js",[],"/Users/Nada/Desktop/Software Project/Website/project/src/App.js",["58","59","60"],"import React,{useEffect} from 'react'\nimport'./App.css'\nimport {BrowserRouter,Route, Switch} from 'react-router-dom'\nimport Navbar from './Components/Navbar'\nimport Home from './Components/Home'\nimport Packages from './Components/Packages'\nimport FreePackage from './Components/FreePackage'\nimport PackageY from './Components/PackageY'\nimport PackageX from './Components/PackageX'\nimport SignUp from './Components/SignUp'\nimport Login from './Components/Login'\nimport Footer from './Components/Footer'\n\n\n\n\n\nfunction App() {\n  return(\n    \n    <BrowserRouter>\n   \n\n    <Navbar/>\n    <Route exact path=\"/\">\n    <Home/>\n    </Route>\n\n    <Route path=\"/packages\">\n      <Packages/>\n\n    </Route>\n    <Route path=\"/packagex\">\n      <PackageX \n      \n      />\n\n    </Route>\n    <Route path=\"/packagey\">\n      <PackageY/>\n\n    </Route>\n    <Route path=\"/freepackage\">\n      <FreePackage/>\n\n    </Route>\n    <Route path=\"/login\">\n      <Login/>\n\n    </Route>\n    <Route path=\"/signup\">\n      <SignUp/>\n\n    </Route>\n\n    \n    \n\n    \n    </BrowserRouter>\n\n\n\n  )\n  \n}\n\nexport default App;\n","/Users/Nada/Desktop/Software Project/Website/project/src/Components/Navbar.js",[],"/Users/Nada/Desktop/Software Project/Website/project/src/Components/Home.js",["61"],"/Users/Nada/Desktop/Software Project/Website/project/src/Components/Packages.js",["62"],"import React,{useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\n\n\nconst Packages=()=>{\n\n\n    return(\n\n        <div className=\"flex2 animate__animated animate__fadeIn\">\n\n            <h3>Our Packages</h3>\n\n            <div >\n                <h3>Free Package</h3>\n                <p>This package includes calculating your Area</p>\n                <p>Price: Free</p>\n                <Link to=\"/freepackage\" className=\"waves-effect #212121 grey darken-4 btn\">Check Free Package</Link>\n            </div>\n            <div>\n                <h3>Package X</h3>\n                <p>This package includes calculating your Area and Budget</p>\n                <p>Price: 5$ per month</p>\n                <Link to=\"/packagex\" className=\"waves-effect #212121 grey darken-4 btn\">Check Package X</Link>\n            </div>\n            <div>\n                <h3>Package Y</h3>\n                <p>This package includes calculating your Area, Budget and Running Costs</p>\n                <p>Price: 10$ per month</p>\n                <Link to=\"/packagey\" className=\"waves-effect #212121 grey darken-4 btn\">Check Package Y</Link>\n            </div>\n\n\n\n\n\n\n\n        </div>\n\n\n    )\n\n\n}\n\nexport default Packages;","/Users/Nada/Desktop/Software Project/Website/project/src/Components/FreePackage.js",["63","64","65","66","67","68","69","70"],"import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Modal, Button } from 'react-materialize';\nimport Select from \"react-select\";\n\nconst FreePackage=()=>{\n\n\n\n    const options = [\n        { value: 'Basic', label: 'Basic' },\n        { value: 'Advanced', label: 'Advanced' },\n        { value: 'Luxurious', label: 'Luxurious' },\n      ];\n      \n      const defaultOption = options[0];\n\n        \n      const handleChange = (event) => {\n        setFinishing(event.value);\n      };\n\n\n\n    const [personnel,setPersonnel]=useState(\"\")\n    const [companyType,setCompanyType]=useState(\"\")\n    const [departments,setDepartments]=useState(\"\")\n    const [personnelPerDep,setPersonnelPerDep]=useState(\"\")\n    const [futurePersonnel,setFuturePersonnel]=useState(\"\")\n    const [finishing, setFinishing] = useState(\"\");\n\n    const CalcTotalArea=(personnel,futurePersonnel)=>{\n\n                \n                \n\n        var totalpersonnel=parseInt(personnel,10)+parseInt(futurePersonnel,10)\n        var Area=totalpersonnel*8;\n\n        \n\n\n        \n\n        return{\n            Area\n            \n        }\n    \n\n    }\n\n    if(personnel){\n    var info=CalcTotalArea(personnel,futurePersonnel)\n\n    \n    var totalArea=info.Area\n    \n\n    }\n\n    return(\n        \n\n        <div className=\"form animate__animated animate__fadeIn\">\n        <h4>Free Package</h4>\n        <label for=\"fname\">Company Type: </label>\n        <input type=\"text\" id=\"Company Type\" name=\"fname\"\n        value={companyType}\n        onChange={(e)=>setCompanyType(e.target.value)}\n        /><br></br>\n\n        <label for=\"fname\">No. of existing personnel: </label>\n        <input type=\"number\" id=\"ExistingPersonnel\" name=\"fname\"\n        value={personnel}\n        onChange={(e)=>setPersonnel(e.target.value)}\n        /><br></br>\n        \n        {/* <label for=\"lname\">No. of Departments: </label>\n        <input type=\"number\" id=\"Departments\" name=\"lname\"\n        value={departments}\n        onChange={(e)=>setDepartments(e.target.value)}\n        /><br></br>\n        \n        <label for=\"lname\">No. of existing personnel per Departments: </label>\n        <input type=\"number\" id=\"PersonnelPerDepartment\" name=\"lname\"\n        value={personnelPerDep}\n        onChange={(e)=>setPersonnelPerDep(e.target.value)}\n        /><br></br> */}\n        \n        <label for=\"lname\">No. of future personnel: </label>\n        <input type=\"number\" id=\"futurePersonnel\" name=\"lname\"\n        value={futurePersonnel}\n        onChange={(e)=>setFuturePersonnel(e.target.value)}\n        trigger\n        /><br></br>\n\n\n        {/* <label for=\"lname\">Level of Finishing: </label> \n\n       \n        \n       <Select\n        placeholder=\"Level of Finishing\"\n        value={options.find(obj => obj.value === finishing)} // set selected value\n        options={options} // set list of the data\n        onChange={handleChange} // assign onChange function\n      />\n\n      <br></br> */}\n        \n        \n        <Modal\n            actions={[\n              <Button flat modal=\"close\" node=\"button\"  >Close</Button>\n            ]}\n            bottomSheet={false}\n            fixedFooter={false}\n            header=\"Modal Header\"\n            id=\"Modal-0\"\n            open={false}\n            options={{\n              dismissible: true,\n              endingTop: '10%',\n              inDuration: 250,\n              onCloseEnd: null,\n              onCloseStart: null,\n              onOpenEnd: null,\n              onOpenStart: null,\n              opacity: 0.5,\n              outDuration: 250,\n              preventScrolling: true,\n              startingTop: '4%'\n            }}\n            \n            \n            trigger={ personnel && companyType && futurePersonnel?( <Button node=\"button\"   className=\"#212121 grey darken-4 btn \"          \n            >Submit</Button> ) : (<Button node=\"button\"   className=\"#212121 grey darken-4 btn disabled \"          \n            >Submit</Button> )}\n            \n          >\n            <table className=\"highlight\">\n                        <thead>\n                        <tr>\n                            <th>Data Attribute</th>\n                            <th>Value</th>\n                            \n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        <tr>\n                            <td>Company Type</td>\n                            <td>{companyType}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. of existing personnel</td>\n                            <td>{personnel}</td>\n                            \n                        </tr>\n                        {/* <tr>\n                            <td>No. of departments</td>\n                            <td>{departments}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. existing personnel per Department</td>\n                            <td>{personnelPerDep}</td>\n                            \n                        </tr> */}\n                        <tr>\n                            <td>No. of future personnel</td>\n                            <td>{futurePersonnel}</td>\n                            \n                        </tr>\n                        \n                        </tbody>\n            </table>            \n            <p>Area needed is {totalArea} meter squared</p>\n          </Modal>\n\n\n\n\n\n\n        <h6>Other Packages:</h6>\n        <Link to=\"/packagex\" className=\"waves-effect #212121 grey darken-4 btn\">Package X</Link><br></br>\n        <Link to=\"/packagey\" className=\"waves-effect #212121 grey darken-4 btn\">Package Y</Link>\n\n\n        </div>\n\n\n\n    )\n}\n\nexport default FreePackage","/Users/Nada/Desktop/Software Project/Website/project/src/Components/PackageY.js",["71","72","73","74","75","76","77","78","79"],"import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Modal, Button } from 'react-materialize';\nimport Select from \"react-select\";\n\n\n\nconst PackageY=()=>{\n\n    const options = [\n        { value: 'Basic', label: 'Basic' },\n        { value: 'Advanced', label: 'Advanced' },\n        { value: 'Luxurious', label: 'Luxurious' },\n      ];\n      \n      const defaultOption = options[0];\n\n        \n      const handleChange = (event) => {\n        setFinishing(event.value);\n      };\n\n\n    const [personnel,setPersonnel]=useState(\"\")\n    const [companyType,setCompanyType]=useState(\"\")\n    const [departments,setDepartments]=useState(\"\")\n    const [personnelPerDep,setPersonnelPerDep]=useState(\"\")\n    const [futurePersonnel,setFuturePersonnel]=useState(\"\")\n    const [finishing, setFinishing] = useState(\"\");\n\n    const CalcTotalArea=(personnel,finishing,futurePersonnel)=>{\n\n        var meterPrice;     \n     if(finishing== \"Basic\"){\n        meterPrice=2500;\n     }else if(finishing==\"Advanced\"){\n        meterPrice=3500;\n     }else if(finishing==\"Luxurious\"){\n        meterPrice=4500;\n     }\n\n     var totalpersonnel=parseInt(personnel,10)+parseInt(futurePersonnel,10)\n     var Area=totalpersonnel*8;\n\n     var Budget=Area*meterPrice\n\n     var Running_Costs=150*Area*365\n\n\n     \n\n     return{\n         Area,\n         Budget,\n         Running_Costs\n         \n     }\n \n\n }\n if(personnel,finishing,futurePersonnel){\n    var info=CalcTotalArea(personnel,finishing,futurePersonnel)\n\n    \n    var totalArea=info.Area\n    var totalBudget=info.Budget\n    var RunningCosts=info.Running_Costs\n\n    }\n\n\n       \n\n    return(\n        <div className=\"form animate__animated animate__fadeIn\">\n        <h4>Package Y</h4>\n        <label for=\"fname\">Company Type: </label>\n        <input type=\"text\" id=\"Company Type\" name=\"fname\"\n        value={companyType}\n        onChange={(e)=>setCompanyType(e.target.value)}\n        /><br></br>\n\n        <label for=\"fname\">No. of existing personnel: </label>\n        <input type=\"number\" id=\"ExistingPersonnel\" name=\"fname\"\n        value={personnel}\n        onChange={(e)=>setPersonnel(e.target.value)}\n        /><br></br>\n        \n        {/* <label for=\"lname\">No. of Departments: </label>\n        <input type=\"number\" id=\"Departments\" name=\"lname\"\n        value={departments}\n        onChange={(e)=>setDepartments(e.target.value)}\n        /><br></br>\n        \n        <label for=\"lname\">No. of existing personnel per Departments: </label>\n        <input type=\"number\" id=\"PersonnelPerDepartment\" name=\"lname\"\n        value={personnelPerDep}\n        onChange={(e)=>setPersonnelPerDep(e.target.value)}\n        /><br></br> */}\n        \n        <label for=\"lname\">No. of future personnel: </label>\n        <input type=\"number\" id=\"futurePersonnel\" name=\"lname\"\n        value={futurePersonnel}\n        onChange={(e)=>setFuturePersonnel(e.target.value)}\n        trigger\n        /><br></br>\n\n\n        <label for=\"lname\">Level of Finishing: </label>\n       \n        \n        <Select\n            placeholder=\"Level of Finishing\"\n            value={options.find(obj => obj.value === finishing)} // set selected value\n            options={options} // set list of the data\n            onChange={handleChange} // assign onChange function\n        />\n        <br></br>\n            \n        \n        <Modal\n            actions={[\n              <Button flat modal=\"close\" node=\"button\"  >Close</Button>\n            ]}\n            bottomSheet={false}\n            fixedFooter={false}\n            header=\"Modal Header\"\n            id=\"Modal-0\"\n            open={false}\n            options={{\n              dismissible: true,\n              endingTop: '10%',\n              inDuration: 250,\n              onCloseEnd: null,\n              onCloseStart: null,\n              onOpenEnd: null,\n              onOpenStart: null,\n              opacity: 0.5,\n              outDuration: 250,\n              preventScrolling: true,\n              startingTop: '4%'\n            }}\n            \n            \n            trigger={ personnel && companyType && futurePersonnel?( <Button node=\"button\"   className=\"#212121 grey darken-4 btn \"          \n            >Submit</Button> ) : (<Button node=\"button\"   className=\"#212121 grey darken-4 btn disabled \"          \n            >Submit</Button> )}\n            \n          >\n            <table className=\"highlight\">\n                        <thead>\n                        <tr>\n                            <th>Data Attribute</th>\n                            <th>Value</th>\n                            \n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        <tr>\n                            <td>Company Type</td>\n                            <td>{companyType}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. of existing personnel</td>\n                            <td>{personnel}</td>\n                            \n                        </tr>\n                        {/* <tr>\n                            <td>No. of departments</td>\n                            <td>{departments}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. existing personnel per Department</td>\n                            <td>{personnelPerDep}</td>\n                            \n                        </tr> */}\n                        <tr>\n                            <td>No. of future personnel</td>\n                            <td>{futurePersonnel}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>Level of Finishing</td>\n                            <td>{finishing}</td>\n                            \n                        </tr>\n                        </tbody>\n            </table>            \n            <p>Area :{totalArea} meter squared</p>\n            <p>Budget : {totalBudget} LE</p>\n            <p>Running Costs: {RunningCosts} LE</p>\n          </Modal>\n\n\n\n\n        <h6>Other Packages:</h6>\n        \n        <Link to=\"/packagex\" className=\"waves-effect #212121 grey darken-4 btn\">Package X</Link>\n\n        </div>\n    )\n}\n\n\nexport default PackageY","/Users/Nada/Desktop/Software Project/Website/project/src/Components/PackageX.js",["80","81","82","83","84","85","86","87","88","89","90","91"],"/Users/Nada/Desktop/Software Project/Website/project/src/Components/SignUp.js",[],"/Users/Nada/Desktop/Software Project/Website/project/src/Components/Login.js",[],"/Users/Nada/Desktop/Software Project/Website/project/src/Components/Footer.js",["92"],"import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Footer=()=>{\n\n\n    return(\n\n\n\n        <footer class=\"page-footer #212121 grey darken-4\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col l6 s12\">\n              <h5 class=\"white-text\">Footer Content</h5>\n              <p class=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p>\n            </div>\n            <div class=\"col l4 offset-l2 s12\">\n              <h5 class=\"white-text\">Links</h5>\n              <ul>\n                <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div class=\"footer-copyright\">\n          <div class=\"container\">\n          © 2014 Copyright Text\n          <a class=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n          </div>\n        </div>\n      </footer>\n    )\n}\n\nexport default Footer\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},{"ruleId":"97","severity":1,"message":"101","line":3,"column":30,"nodeType":"99","messageId":"100","endLine":3,"endColumn":36},{"ruleId":"97","severity":1,"message":"102","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},{"ruleId":"97","severity":1,"message":"98","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},{"ruleId":"97","severity":1,"message":"103","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"104","line":16,"column":13,"nodeType":"99","messageId":"100","endLine":16,"endColumn":26},{"ruleId":"97","severity":1,"message":"105","line":19,"column":13,"nodeType":"99","messageId":"100","endLine":19,"endColumn":25},{"ruleId":"97","severity":1,"message":"106","line":27,"column":12,"nodeType":"99","messageId":"100","endLine":27,"endColumn":23},{"ruleId":"97","severity":1,"message":"107","line":27,"column":24,"nodeType":"99","messageId":"100","endLine":27,"endColumn":38},{"ruleId":"97","severity":1,"message":"108","line":28,"column":12,"nodeType":"99","messageId":"100","endLine":28,"endColumn":27},{"ruleId":"97","severity":1,"message":"109","line":28,"column":28,"nodeType":"99","messageId":"100","endLine":28,"endColumn":46},{"ruleId":"97","severity":1,"message":"110","line":30,"column":12,"nodeType":"99","messageId":"100","endLine":30,"endColumn":21},{"ruleId":"97","severity":1,"message":"104","line":16,"column":13,"nodeType":"99","messageId":"100","endLine":16,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":26,"column":12,"nodeType":"99","messageId":"100","endLine":26,"endColumn":23},{"ruleId":"97","severity":1,"message":"107","line":26,"column":24,"nodeType":"99","messageId":"100","endLine":26,"endColumn":38},{"ruleId":"97","severity":1,"message":"108","line":27,"column":12,"nodeType":"99","messageId":"100","endLine":27,"endColumn":27},{"ruleId":"97","severity":1,"message":"109","line":27,"column":28,"nodeType":"99","messageId":"100","endLine":27,"endColumn":46},{"ruleId":"111","severity":1,"message":"112","line":34,"column":18,"nodeType":"113","messageId":"114","endLine":34,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":36,"column":24,"nodeType":"113","messageId":"114","endLine":36,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":38,"column":24,"nodeType":"113","messageId":"114","endLine":38,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":61,"column":14,"nodeType":"117","messageId":"118","endLine":61,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":1,"column":24,"nodeType":"99","messageId":"100","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"119","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"120","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":9},{"ruleId":"97","severity":1,"message":"104","line":22,"column":13,"nodeType":"99","messageId":"100","endLine":22,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":33,"column":12,"nodeType":"99","messageId":"100","endLine":33,"endColumn":23},{"ruleId":"97","severity":1,"message":"107","line":33,"column":24,"nodeType":"99","messageId":"100","endLine":33,"endColumn":38},{"ruleId":"97","severity":1,"message":"108","line":34,"column":12,"nodeType":"99","messageId":"100","endLine":34,"endColumn":27},{"ruleId":"97","severity":1,"message":"109","line":34,"column":28,"nodeType":"99","messageId":"100","endLine":34,"endColumn":46},{"ruleId":"97","severity":1,"message":"121","line":38,"column":11,"nodeType":"99","messageId":"100","endLine":38,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":45,"column":21,"nodeType":"113","messageId":"114","endLine":45,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":47,"column":27,"nodeType":"113","messageId":"114","endLine":47,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":49,"column":27,"nodeType":"113","messageId":"114","endLine":49,"endColumn":29},{"ruleId":"97","severity":1,"message":"122","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Footer' is defined but never used.","'Select' is defined but never used.","'defaultOption' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'departments' is assigned a value but never used.","'setDepartments' is assigned a value but never used.","'personnelPerDep' is assigned a value but never used.","'setPersonnelPerDep' is assigned a value but never used.","'finishing' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Dropdown' is defined but never used.","'M' is defined but never used.","'trigger' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]