{"version":3,"sources":["Components/Navbar.js","Components/Home.js","Components/Packages.js","Components/FreePackage.js","Components/PackageY.js","Components/PackageX.js","Components/SignUp.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","id","Home","Packages","FreePackage","useState","personnel","setPersonnel","companyType","setCompanyType","futurePersonnel","setFuturePersonnel","totalArea","Area","parseInt","CalcTotalArea","for","type","name","value","onChange","e","target","trigger","actions","flat","modal","node","bottomSheet","fixedFooter","header","open","options","dismissible","endingTop","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","opacity","outDuration","preventScrolling","startingTop","PackageY","label","finishing","setFinishing","info","meterPrice","Budget","Running_Costs","totalBudget","RunningCosts","placeholder","find","obj","event","PackageX","class","SignUp","Login","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19f87c55.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n\n\n\nconst Navbar=()=>{\n\n    return(\n        <nav>\n        <div className=\"nav-wrapper #212121 grey darken-4 \">\n        <Link to=\"/\" className=\"brand-logo\">Project X</Link>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li><Link to=\"/packages\">Packages</Link></li>\n            <li><Link to=\"/signup\">Sign Up</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n            \n        </ul>\n        </div>\n        </nav>\n    )\n\n\n\n}\n\n\nexport default Navbar;\n\n","import React,{useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n\n\n\n\n\nconst Home=()=>{\n\n    return(\n\n        \n        <div className=\"flex-container animate__animated animate__fadeIn  \">\n\n            <h3>We provide you with the ultimate plan for starting your business</h3>\n\n            <h5>Based on Machine Learning, our services provide you with the optimal Area, Budget and Running Costs for your project</h5>\n\n            <h5>For more information check our packages:</h5>\n\n            <Link to=\"/packages\" className=\"waves-effect #212121 grey darken-4 btn\">Check Packages</Link>\n\n\n        </div>\n\n\n    )\n}\n\n\nexport default Home;","import React,{useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\n\n\nconst Packages=()=>{\n\n\n    return(\n\n        <div className=\"flex2 animate__animated animate__fadeIn\">\n\n            <h3>Our Packages</h3>\n\n            <div >\n                <h3>Free Package</h3>\n                <p>This package includes calculating your Area</p>\n                <p>Price: Free</p>\n                <Link to=\"/freepackage\" className=\"waves-effect #212121 grey darken-4 btn\">Check Free Package</Link>\n            </div>\n            <div>\n                <h3>Package X</h3>\n                <p>This package includes calculating your Area and Budget</p>\n                <p>Price: 5$ per month</p>\n                <Link to=\"/packagex\" className=\"waves-effect #212121 grey darken-4 btn\">Check Package X</Link>\n            </div>\n            <div>\n                <h3>Package Y</h3>\n                <p>This package includes calculating your Area, Budget and Running Costs</p>\n                <p>Price: 10$ per month</p>\n                <Link to=\"/packagey\" className=\"waves-effect #212121 grey darken-4 btn\">Check Package Y</Link>\n            </div>\n\n\n\n\n\n\n\n        </div>\n\n\n    )\n\n\n}\n\nexport default Packages;","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Modal, Button } from 'react-materialize';\nimport Select from \"react-select\";\n\nconst FreePackage=()=>{\n\n\n\n    const options = [\n        { value: 'Basic', label: 'Basic' },\n        { value: 'Advanced', label: 'Advanced' },\n        { value: 'Luxurious', label: 'Luxurious' },\n      ];\n      \n      const defaultOption = options[0];\n\n        \n      const handleChange = (event) => {\n        setFinishing(event.value);\n      };\n\n\n\n    const [personnel,setPersonnel]=useState(\"\")\n    const [companyType,setCompanyType]=useState(\"\")\n    const [departments,setDepartments]=useState(\"\")\n    const [personnelPerDep,setPersonnelPerDep]=useState(\"\")\n    const [futurePersonnel,setFuturePersonnel]=useState(\"\")\n    const [finishing, setFinishing] = useState(\"\");\n\n    const CalcTotalArea=(personnel,futurePersonnel)=>{\n\n                \n                \n\n        var totalpersonnel=parseInt(personnel,10)+parseInt(futurePersonnel,10)\n        var Area=totalpersonnel*8;\n\n        \n\n\n        \n\n        return{\n            Area\n            \n        }\n    \n\n    }\n\n    if(personnel && futurePersonnel){\n    var info=CalcTotalArea(personnel,futurePersonnel)\n\n    \n    var totalArea=info.Area\n    \n\n    }\n\n    return(\n        \n\n        <div className=\"form animate__animated animate__fadeIn\">\n        <h4>Free Package</h4>\n        <label for=\"fname\">Company Type: </label>\n        <input type=\"text\" id=\"Company Type\" name=\"fname\"\n        value={companyType}\n        onChange={(e)=>setCompanyType(e.target.value)}\n        /><br></br>\n\n        <label for=\"fname\">No. of existing personnel: </label>\n        <input type=\"number\" id=\"ExistingPersonnel\" name=\"fname\"\n        value={personnel}\n        onChange={(e)=>setPersonnel(e.target.value)}\n        /><br></br>\n        \n        {/* <label for=\"lname\">No. of Departments: </label>\n        <input type=\"number\" id=\"Departments\" name=\"lname\"\n        value={departments}\n        onChange={(e)=>setDepartments(e.target.value)}\n        /><br></br>\n        \n        <label for=\"lname\">No. of existing personnel per Departments: </label>\n        <input type=\"number\" id=\"PersonnelPerDepartment\" name=\"lname\"\n        value={personnelPerDep}\n        onChange={(e)=>setPersonnelPerDep(e.target.value)}\n        /><br></br> */}\n        \n        <label for=\"lname\">No. of future personnel: </label>\n        <input type=\"number\" id=\"futurePersonnel\" name=\"lname\"\n        value={futurePersonnel}\n        onChange={(e)=>setFuturePersonnel(e.target.value)}\n        trigger\n        /><br></br>\n\n\n        {/* <label for=\"lname\">Level of Finishing: </label> \n\n       \n        \n       <Select\n        placeholder=\"Level of Finishing\"\n        value={options.find(obj => obj.value === finishing)} // set selected value\n        options={options} // set list of the data\n        onChange={handleChange} // assign onChange function\n      />\n\n      <br></br> */}\n        \n        \n        <Modal\n            actions={[\n              <Button flat modal=\"close\" node=\"button\"  >Close</Button>\n            ]}\n            bottomSheet={false}\n            fixedFooter={false}\n            header=\"Modal Header\"\n            id=\"Modal-0\"\n            open={false}\n            options={{\n              dismissible: true,\n              endingTop: '10%',\n              inDuration: 250,\n              onCloseEnd: null,\n              onCloseStart: null,\n              onOpenEnd: null,\n              onOpenStart: null,\n              opacity: 0.5,\n              outDuration: 250,\n              preventScrolling: true,\n              startingTop: '4%'\n            }}\n            \n            \n            trigger={ personnel && companyType && futurePersonnel?( <Button node=\"button\"   className=\"#212121 grey darken-4 btn \"          \n            >Submit</Button> ) : (<Button node=\"button\"   className=\"#212121 grey darken-4 btn disabled \"          \n            >Submit</Button> )}\n            \n          >\n            <table className=\"highlight\">\n                        <thead>\n                        <tr>\n                            <th>Data Attribute</th>\n                            <th>Value</th>\n                            \n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        <tr>\n                            <td>Company Type</td>\n                            <td>{companyType}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. of existing personnel</td>\n                            <td>{personnel}</td>\n                            \n                        </tr>\n                        {/* <tr>\n                            <td>No. of departments</td>\n                            <td>{departments}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. existing personnel per Department</td>\n                            <td>{personnelPerDep}</td>\n                            \n                        </tr> */}\n                        <tr>\n                            <td>No. of future personnel</td>\n                            <td>{futurePersonnel}</td>\n                            \n                        </tr>\n                        \n                        </tbody>\n            </table>            \n            <p>Area needed is {totalArea} meter squared</p>\n          </Modal>\n\n\n\n\n\n\n        <h6>Other Packages:</h6>\n        <Link to=\"/packagex\" className=\"waves-effect #212121 grey darken-4 btn\">Package X</Link><br></br>\n        <Link to=\"/packagey\" className=\"waves-effect #212121 grey darken-4 btn\">Package Y</Link>\n\n\n        </div>\n\n\n\n    )\n}\n\nexport default FreePackage","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\nimport { Modal, Button } from 'react-materialize';\nimport Select from \"react-select\";\n\n\n\nconst PackageY=()=>{\n\n    const options = [\n        { value: 'Basic', label: 'Basic' },\n        { value: 'Advanced', label: 'Advanced' },\n        { value: 'Luxurious', label: 'Luxurious' },\n      ];\n      \n      const defaultOption = options[0];\n\n        \n      const handleChange = (event) => {\n        setFinishing(event.value);\n      };\n\n\n    const [personnel,setPersonnel]=useState(\"\")\n    const [companyType,setCompanyType]=useState(\"\")\n    const [departments,setDepartments]=useState(\"\")\n    const [personnelPerDep,setPersonnelPerDep]=useState(\"\")\n    const [futurePersonnel,setFuturePersonnel]=useState(\"\")\n    const [finishing, setFinishing] = useState(\"\");\n\n    const CalcTotalArea=(personnel,finishing,futurePersonnel)=>{\n\n        var meterPrice;     \n     if(finishing== \"Basic\"){\n        meterPrice=2500;\n     }else if(finishing==\"Advanced\"){\n        meterPrice=3500;\n     }else if(finishing==\"Luxurious\"){\n        meterPrice=4500;\n     }\n\n     var totalpersonnel=parseInt(personnel,10)+parseInt(futurePersonnel,10)\n     var Area=totalpersonnel*8;\n\n     var Budget=Area*meterPrice\n\n     var Running_Costs=150*Area*365\n\n\n     \n\n     return{\n         Area,\n         Budget,\n         Running_Costs\n         \n     }\n \n\n }\n if(personnel && finishing && futurePersonnel){\n    var info=CalcTotalArea(personnel,finishing,futurePersonnel)\n\n    \n    var totalArea=info.Area\n    var totalBudget=info.Budget\n    var RunningCosts=info.Running_Costs\n\n    }\n\n\n       \n\n    return(\n        <div className=\"form animate__animated animate__fadeIn\">\n        <h4>Package Y</h4>\n        <label for=\"fname\">Company Type: </label>\n        <input type=\"text\" id=\"Company Type\" name=\"fname\"\n        value={companyType}\n        onChange={(e)=>setCompanyType(e.target.value)}\n        /><br></br>\n\n        <label for=\"fname\">No. of existing personnel: </label>\n        <input type=\"number\" id=\"ExistingPersonnel\" name=\"fname\"\n        value={personnel}\n        onChange={(e)=>setPersonnel(e.target.value)}\n        /><br></br>\n        \n        {/* <label for=\"lname\">No. of Departments: </label>\n        <input type=\"number\" id=\"Departments\" name=\"lname\"\n        value={departments}\n        onChange={(e)=>setDepartments(e.target.value)}\n        /><br></br>\n        \n        <label for=\"lname\">No. of existing personnel per Departments: </label>\n        <input type=\"number\" id=\"PersonnelPerDepartment\" name=\"lname\"\n        value={personnelPerDep}\n        onChange={(e)=>setPersonnelPerDep(e.target.value)}\n        /><br></br> */}\n        \n        <label for=\"lname\">No. of future personnel: </label>\n        <input type=\"number\" id=\"futurePersonnel\" name=\"lname\"\n        value={futurePersonnel}\n        onChange={(e)=>setFuturePersonnel(e.target.value)}\n        trigger\n        /><br></br>\n\n\n        <label for=\"lname\">Level of Finishing: </label>\n       \n        \n        <Select\n            placeholder=\"Level of Finishing\"\n            value={options.find(obj => obj.value === finishing)} // set selected value\n            options={options} // set list of the data\n            onChange={handleChange} // assign onChange function\n        />\n        <br></br>\n            \n        \n        <Modal\n            actions={[\n              <Button flat modal=\"close\" node=\"button\"  >Close</Button>\n            ]}\n            bottomSheet={false}\n            fixedFooter={false}\n            header=\"Modal Header\"\n            id=\"Modal-0\"\n            open={false}\n            options={{\n              dismissible: true,\n              endingTop: '10%',\n              inDuration: 250,\n              onCloseEnd: null,\n              onCloseStart: null,\n              onOpenEnd: null,\n              onOpenStart: null,\n              opacity: 0.5,\n              outDuration: 250,\n              preventScrolling: true,\n              startingTop: '4%'\n            }}\n            \n            \n            trigger={ personnel && companyType && futurePersonnel?( <Button node=\"button\"   className=\"#212121 grey darken-4 btn \"          \n            >Submit</Button> ) : (<Button node=\"button\"   className=\"#212121 grey darken-4 btn disabled \"          \n            >Submit</Button> )}\n            \n          >\n            <table className=\"highlight\">\n                        <thead>\n                        <tr>\n                            <th>Data Attribute</th>\n                            <th>Value</th>\n                            \n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        <tr>\n                            <td>Company Type</td>\n                            <td>{companyType}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. of existing personnel</td>\n                            <td>{personnel}</td>\n                            \n                        </tr>\n                        {/* <tr>\n                            <td>No. of departments</td>\n                            <td>{departments}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. existing personnel per Department</td>\n                            <td>{personnelPerDep}</td>\n                            \n                        </tr> */}\n                        <tr>\n                            <td>No. of future personnel</td>\n                            <td>{futurePersonnel}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>Level of Finishing</td>\n                            <td>{finishing}</td>\n                            \n                        </tr>\n                        </tbody>\n            </table>            \n            <p>Area :{totalArea} meter squared</p>\n            <p>Budget : {totalBudget} LE</p>\n            <p>Running Costs: {RunningCosts} LE</p>\n          </Modal>\n\n\n\n\n        <h6>Other Packages:</h6>\n        \n        <Link to=\"/packagex\" className=\"waves-effect #212121 grey darken-4 btn\">Package X</Link>\n\n        </div>\n    )\n}\n\n\nexport default PackageY","import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport { Modal, Button } from 'react-materialize';\nimport Select from \"react-select\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport M from 'materialize-css'\n\n\n\n\n\nconst PackageX=()=>{\n\n    \n    const options = [\n        { value: 'Basic', label: 'Basic' },\n        { value: 'Advanced', label: 'Advanced' },\n        { value: 'Luxurious', label: 'Luxurious' },\n      ];\n      \n      const defaultOption = options[0];\n\n        \n      const handleChange = (event) => {\n        setFinishing(event.value);\n      };\n\n\n\n    const [personnel,setPersonnel]=useState(\"\")\n    const [companyType,setCompanyType]=useState(\"\")\n    const [departments,setDepartments]=useState(\"\")\n    const [personnelPerDep,setPersonnelPerDep]=useState(\"\")\n    const [futurePersonnel,setFuturePersonnel]=useState(\"\")\n    const [finishing, setFinishing] = useState(\"\");\n    \n    const trigger = <Button>Open Modal</Button>;\n\n    \n    \n    const CalcTotalArea=(personnel,finishing,futurePersonnel)=>{\n\n           var meterPrice;     \n        if(finishing== \"Basic\"){\n            meterPrice=2500;\n        }else if(finishing==\"Advanced\"){\n            meterPrice=3500;\n        }else if(finishing==\"Luxurious\"){\n            meterPrice=4500;\n        }\n        var totalpersonnel=parseInt(personnel,10)+parseInt(futurePersonnel,10)\n        var Area=totalpersonnel*3;\n\n        var Budget=Area*meterPrice\n\n\n        \n\n        return{\n            Area,\n            Budget,\n            \n        }\n    \n\n    }\n\n\n    \n\n    if(personnel && finishing && futurePersonnel){\n    var info=CalcTotalArea(personnel,finishing,futurePersonnel)\n\n    \n    var totalArea=info.Area\n    var totalBudget=info.Budget\n\n    }\n\n    \n    \n\n\n\n    return(\n       \n        <div className=\"form animate__animated animate__fadeIn\">\n        <h4>Package X</h4>\n        <label for=\"fname\">Company Type: </label>\n        <input type=\"text\" id=\"Company Type\" name=\"fname\"\n        value={companyType}\n        onChange={(e)=>setCompanyType(e.target.value)}\n        /><br></br>\n\n        <label for=\"fname\">No. of existing personnel: </label>\n        <input type=\"number\" id=\"ExistingPersonnel\" name=\"fname\"\n        value={personnel}\n        onChange={(e)=>setPersonnel(e.target.value)}\n        /><br></br>\n        \n        {/* <label for=\"lname\">No. of Departments: </label>\n        <input type=\"number\" id=\"Departments\" name=\"lname\"\n        value={departments}\n        onChange={(e)=>setDepartments(e.target.value)}\n        /><br></br>\n        \n        <label for=\"lname\">No. of existing personnel per Departments: </label>\n        <input type=\"number\" id=\"PersonnelPerDepartment\" name=\"lname\"\n        value={personnelPerDep}\n        onChange={(e)=>setPersonnelPerDep(e.target.value)}\n        /><br></br> */}\n        \n        <label for=\"lname\">No. of future personnel: </label>\n        <input type=\"number\" id=\"futurePersonnel\" name=\"lname\"\n        value={futurePersonnel}\n        onChange={(e)=>setFuturePersonnel(e.target.value)}\n        trigger\n        /><br></br>\n        \n        <label for=\"lname\">Level of Finishing: </label> \n        \n               \n        \n        \n        {/* <Select\n        placeholder=\"Level of Finishing\"\n        value={selectedOption}\n        onChange={(e)=>setSelectedOption(selectedOption)}\n        onInputChange\n        \n        options={options}\n      /> */}\n\n        {/* <label for=\"lname\">Level of Finishing: </label>    \n        <Dropdown options={options} value={selectedOption} onChange={handleChange} placeholder=\"Select an option\" />            */}\n       \n        \n       <Select\n        placeholder=\"Level of Finishing\"\n        value={options.find(obj => obj.value === finishing)} // set selected value\n        options={options} // set list of the data\n        onChange={handleChange} // assign onChange function\n      />\n        \n        <br></br>\n                        \n        \n        <Modal\n            actions={[\n              <Button flat modal=\"close\" node=\"button\" >Close</Button>\n            ]}\n            bottomSheet={false}\n            fixedFooter={false}\n            header=\"Results\"\n            id=\"Modal-0\"\n            open={false}\n            options={{\n              dismissible: true,\n              endingTop: '10%',\n              inDuration: 250,\n              onCloseEnd: null,\n              onCloseStart: null,\n              onOpenEnd: null,\n              onOpenStart: null,\n              opacity: 0.1,\n              outDuration: 250,\n              preventScrolling: true,\n              startingTop: '4%'\n            }}\n            \n            \n            trigger={ personnel && companyType && futurePersonnel && finishing?( <Button node=\"button\"   className=\"#212121 grey darken-4 btn \"          \n            >Submit</Button> ) : (<Button node=\"button\"   className=\"#212121 grey darken-4 btn disabled \"          \n            >Submit</Button> )}\n            \n          >\n            <table className=\"highlight\">\n                        <thead>\n                        <tr>\n                            <th>Data Attribute</th>\n                            <th>Value</th>\n                            \n                        </tr>\n                        </thead>\n\n                        <tbody>\n                        <tr>\n                            <td>Company Type</td>\n                            <td>{companyType}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>No. of existing personnel</td>\n                            <td>{personnel}</td>\n                            \n                        </tr>\n                        \n                        <tr>\n                            <td>No. of future personnel</td>\n                            <td>{futurePersonnel}</td>\n                            \n                        </tr>\n                        <tr>\n                            <td>Level of Finishing</td>\n                            <td>{finishing}</td>\n                            \n                        </tr>\n                        </tbody>\n            </table>            \n            <p>Area :{totalArea} meter squared</p>\n            <p>Budget : {totalBudget} LE</p>\n          </Modal>\n          \n        \n\n        \n        \n\n\n        <h6>Other Packages:</h6>\n        \n        <Link to=\"/packagey\" class=\"waves-effect waves-light #212121 grey darken-4 btn\" >Package Y</Link><br></br>\n\n\n\n\n        \n\n        \n        \n\n\n\n\n        </div>\n\n\n        \n    \n    )\n}\n\nexport default PackageX","import React from 'react'\nimport {Link} from 'react-router-dom'\n\n\nconst SignUp=()=>{\n    return (\n        <div className=\"myCard animate__animated animate__fadeIn\">\n        <div className=\"card authCard\">\n            <h3>Sign Up</h3>\n            <h5> Create New Account</h5>\n\n\n            <label for=\"fname\">Full Name: </label>\n            <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            \n            />\n\n\n            <label for=\"fname\">Phone Number: </label>\n            <input\n            type=\"text\"\n            placeholder=\"Phone Number\"\n\n            />\n\n        \n\n            <label for=\"fname\">Email: </label>\n            <input\n            type=\"text\"\n            placeholder=\"Email\"\n            \n            />\n\n            <label for=\"fname\">Password: </label>\n            <input\n            type=\"password\"\n            placeholder=\"Password\"\n\n            />\n\n            <label for=\"fname\">Confirm Password: </label>\n            <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n\n            />\n\n            <Link to=\"/freepackage\" className=\"waves-effect #212121 grey darken-4 btn\">Sign Up</Link>\n        </div>\n      </div>\n    )\n\n}\n\nexport default SignUp;","import React from 'react'\nimport {Link} from 'react-router-dom'\n\n\nconst Login=()=>{\n    return(\n        <div className=\"myCard animate__animated animate__fadeIn\">\n        <div className=\"card authCard\">\n            <h3>Login</h3>\n            \n\n            <label for=\"fname\">Email: </label>\n            <input\n            type=\"email\"\n            placeholder=\"Email\"\n            \n            />\n            \n\n            <label for=\"fname\">Password: </label>\n            <input\n            type=\"password\"\n            placeholder=\"Password\"\n\n            />\n\n            <Link to=\"/freepackage\" className=\"waves-effect #212121 grey darken-4 btn\">Login</Link>            \n           \n        </div>\n      </div>\n    )\n\n}\n\n\nexport default Login","import React,{useEffect} from 'react'\nimport'./App.css'\nimport {BrowserRouter,Route, Switch} from 'react-router-dom'\nimport Navbar from './Components/Navbar'\nimport Home from './Components/Home'\nimport Packages from './Components/Packages'\nimport FreePackage from './Components/FreePackage'\nimport PackageY from './Components/PackageY'\nimport PackageX from './Components/PackageX'\nimport SignUp from './Components/SignUp'\nimport Login from './Components/Login'\nimport Footer from './Components/Footer'\n\n\n\n\n\nfunction App() {\n  return(\n    \n    <BrowserRouter>\n   \n\n    <Navbar/>\n    <Route exact path=\"/\">\n    <Home/>\n    </Route>\n\n    <Route path=\"/packages\">\n      <Packages/>\n\n    </Route>\n    <Route path=\"/packagex\">\n      <PackageX \n      \n      />\n\n    </Route>\n    <Route path=\"/packagey\">\n      <PackageY/>\n\n    </Route>\n    <Route path=\"/freepackage\">\n      <FreePackage/>\n\n    </Route>\n    <Route path=\"/login\">\n      <Login/>\n\n    </Route>\n    <Route path=\"/signup\">\n      <SignUp/>\n\n    </Route>\n\n    \n    \n\n    \n    </BrowserRouter>\n\n\n\n  )\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}